{"ast":null,"code":"import _asyncToGenerator from \"D:/Documentos/Projects/Angular/FrontendSRComunicacion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { HttpEventType, HttpRequest } from '@angular/common/http';\nimport { catchError, last, map, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/Cliente/Services/correspondencia.service\";\nimport * as i5 from \"src/app/Cliente/Services/remdem.service\";\nimport * as i6 from \"@angular/common/http\";\nimport * as i7 from \"src/app/Cliente/Services/auth.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"primeng/button\";\nimport * as i10 from \"primeng/inputtext\";\nimport * as i11 from \"primeng/toast\";\nimport * as i12 from \"primeng/panel\";\nimport * as i13 from \"primeng/dropdown\";\nimport * as i14 from \"primeng/autocomplete\";\nimport * as i15 from \"../../header-menu/header-menu.component\";\nfunction CorrespondenciaComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.titulo);\n  }\n}\nfunction CorrespondenciaComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CorrespondenciaComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.atras());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CorrespondenciaComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rem_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", rem_r3.nombres, \" \", rem_r3.apellidos, \"\");\n  }\n}\nfunction CorrespondenciaComponent_ng_container_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validador_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", validador_r4.message, \" \");\n  }\n}\nfunction CorrespondenciaComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CorrespondenciaComponent_ng_container_14_div_1_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validador_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myform.get(\"idRemitente\").hasError(validador_r4.type) && (ctx_r0.myform.get(\"idRemitente\").dirty || ctx_r0.myform.get(\"idRemitente\").touch));\n  }\n}\nfunction CorrespondenciaComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const des_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", des_r5.nombres, \" \", des_r5.apellidos, \"\");\n  }\n}\nfunction CorrespondenciaComponent_ng_container_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validador_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", validador_r6.message, \" \");\n  }\n}\nfunction CorrespondenciaComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CorrespondenciaComponent_ng_container_22_div_1_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validador_r6 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myform.get(\"idDestinatario\").hasError(validador_r6.type) && (ctx_r0.myform.get(\"idDestinatario\").dirty || ctx_r0.myform.get(\"idDestinatario\").touch));\n  }\n}\nfunction CorrespondenciaComponent_ng_container_38_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validador_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", validador_r7.message, \" \");\n  }\n}\nfunction CorrespondenciaComponent_ng_container_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CorrespondenciaComponent_ng_container_38_div_1_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validador_r7 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myform.get(\"observacion\").hasError(validador_r7.type) && (ctx_r0.myform.get(\"observacion\").dirty || ctx_r0.myform.get(\"observacion\").touch));\n  }\n}\nexport let CorrespondenciaComponent = /*#__PURE__*/(() => {\n  class CorrespondenciaComponent {\n    constructor(router, formbuilder, messageService, corresservices, remdemservices, _http, auth) {\n      this.router = router;\n      this.messageService = messageService;\n      this.corresservices = corresservices;\n      this.remdemservices = remdemservices;\n      this._http = _http;\n      this.auth = auth;\n      this.displaychange = new EventEmitter();\n      this.verEditar = false;\n      this.displaybotton = false;\n      this.listaremi = [];\n      this.listadest = [];\n      this.listrm = [];\n      this.text = 'Upload';\n      this.param = 'file';\n      this.target = 'https://file.io';\n      this.accept = 'pdf';\n      this.listtipocorr = [];\n      this.validation = {\n        idRemitente: [{\n          type: 'required',\n          message: 'El campo es obligatorio'\n        }],\n        idDestinatario: [{\n          type: 'required',\n          message: 'El campo es obligatorio'\n        }],\n        observacion: [{\n          type: 'required',\n          message: 'El campo es obligatorio'\n        }],\n        tipoCorrespondencia: [{\n          type: 'required',\n          message: 'El campo es obligatorio'\n        }]\n      };\n      this.myform = formbuilder.group({\n        idRemitente: new FormControl('', Validators.compose([Validators.required])),\n        idDestinatario: new FormControl('', Validators.compose([Validators.required])),\n        rutaArchivo: new FormControl('', Validators.compose([])),\n        observacion: new FormControl('', Validators.compose([Validators.required])),\n        tipoCorrespondencia: new FormControl('1', Validators.compose([Validators.required]))\n      });\n      this.GetRemDes();\n      this.listtipocorr = [{\n        name: \"seleccione\",\n        code: \"\"\n      }, {\n        name: \"Interna\",\n        code: \"1\"\n      }, {\n        name: \"Externa\",\n        code: \"2\"\n      }];\n    }\n    ngOnInit() {\n      this.showDatos();\n    }\n    showDatos() {\n      if (this.corresditar !== undefined) {\n        this.listadest.filter(x => x.idremitente == this.corresditar.idDestinatario).forEach(d => {\n          this.myform.get('idDestinatario').patchValue(d.nombres);\n          this.myform.get('idDestinatario').setValue(d.nombres);\n          this.myform.controls['idDestinatario'].setValue(d.nombres);\n          this.myform.controls['idDestinatario'].patchValue(d.nombres);\n        });\n        this.myform.get('idRemitente').setValue(this.corresditar.remitente);\n        this.myform.get('idDestinatario').setValue(this.corresditar.idDestinatario);\n        this.myform.get('observacion').setValue(this.corresditar.observacion);\n        let prefijo = this.corresditar.idCorrespondencia.startsWith('CI') ? \"1\" : \"2\";\n        this.myform.get('tipoCorrespondencia').setValue(prefijo);\n        this.titulo = \"Editar Correspondencia\";\n        this.verEditar = true;\n      } else {\n        this.displaybotton = true;\n        this.titulo = \"Correspondencia\";\n        this.verEditar = false;\n        this.LimpiarFormulario();\n      }\n    }\n    GetRemDes() {\n      this.remdemservices.GetAll().subscribe(data => {\n        this.listrm = data;\n        this.listaremi = this.listrm.filter(x => x.idTipoRemDes == 1);\n        this.listadest = this.listrm.filter(x => x.idTipoRemDes == 2);\n      });\n    }\n    Save() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.uploadFile();\n        if (_this.myform.valid) {\n          if (_this.corresditar != undefined) {\n            _this.update();\n          } else {\n            _this.add();\n          }\n        } else {\n          _this.addSingle('error', 'Faltan datos por completar');\n        }\n      })();\n    }\n    update() {\n      this.corresservices.idcorrespondencia = this.corresditar.idCorrespondencia;\n      this.corresservices.correspondencia.idRemitente = this.myform.value.idRemitente.idremitente;\n      this.corresservices.correspondencia.idDestinatario = this.myform.value.idDestinatario.idremitente;\n      this.corresservices.correspondencia.rutaArchivo = this.Link;\n      this.corresservices.correspondencia.observacion = this.myform.value.observacion;\n      this.corresservices.correspondencia.tipoCorrespondencia = Number.parseInt(this.myform.value.tipoCorrespondencia);\n      let numero = Number.parseInt(this.auth.getIduser());\n      console.log(numero);\n      this.corresservices.correspondencia.idusuarioactualizacion = numero;\n      this.corresservices.update().subscribe(data => {\n        if (data['code'] == 1) {\n          this.displaychange.emit(true);\n        } else {\n          this.addSingle('error', data['descripcion']);\n        }\n      });\n    }\n    add() {\n      this.corresservices.correspondencia.idRemitente = this.myform.value.idRemitente.idremitente;\n      this.corresservices.correspondencia.idDestinatario = this.myform.value.idDestinatario.idremitente;\n      this.corresservices.correspondencia.rutaArchivo = this.Link;\n      this.corresservices.correspondencia.observacion = this.myform.value.observacion;\n      this.corresservices.correspondencia.tipoCorrespondencia = Number.parseInt(this.myform.value.tipoCorrespondencia);\n      console.log(\"code: \" + this.myform.value.tipoCorrespondencia);\n      let numero = Number.parseInt(this.auth.getIduser());\n      console.log(\" user id \" + this.auth.getIduser());\n      this.corresservices.correspondencia.idusuariocreacion = numero;\n      this.corresservices.Add().subscribe({\n        next: data => {\n          if (data['code'] == 1) {\n            this.LimpiarFormulario();\n            this.addSingle('success', data['descripcion']);\n          } else {\n            this.addSingle('error', data['descripcion']);\n          }\n        },\n        error: error => {\n          this.addSingle('error', error.message);\n        }\n      });\n    }\n    uploadFile() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const fileUpload = document.getElementById('rutaArchivo');\n        if (fileUpload.value != '') {\n          // tslint:disable-next-line:prefer-for-of\n          for (let index = 0; index < fileUpload.files.length; index++) {\n            const file = fileUpload.files[index];\n            _this2.files = {\n              data: file,\n              state: 'in',\n              inProgress: false,\n              progress: 0,\n              canRetry: false,\n              canCancel: true\n            };\n            _this2.loadFile(_this2.files);\n          }\n        } else {\n          _this2.Link = \"\";\n        }\n      })();\n    }\n    loadFile(file) {\n      const fd = new FormData();\n      fd.append(this.param, file.data);\n      const req = new HttpRequest('POST', this.target, fd, {\n        reportProgress: true\n      });\n      file.inProgress = true;\n      file.sub = this._http.request(req).pipe(map(event => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            file.progress = Math.round(event.loaded * 100 / event.total);\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }), tap(message => {}), last(), catchError(error => {\n        file.inProgress = false;\n        file.canRetry = true;\n        return of(`${file.data.name} upload failed.`);\n      })).subscribe(event => {\n        if (typeof event === 'object') {\n          this.Link = event.body.link;\n          console.log(this.Link);\n        }\n      });\n    }\n    atras() {\n      this.router.navigateByUrl('ListarCorrespondencia');\n    }\n    onFileChange(event) {\n      if (event.target.files && event.target.files.length > 0) {\n        //Identifica si hay archivos\n        const file = event.target.files[0];\n        if (file.type.includes(\"pdf\")) {\n          //Evaluar si es una imagen\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = function load() {\n            this.image = reader.result; //Asignar al thumbnail\n          }.bind(this);\n          this.file = file;\n        }\n      }\n    }\n    LimpiarFormulario() {\n      this.myform.reset();\n    }\n    addSingle(tipo, mensaje) {\n      if (tipo == 'success') {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Service Message',\n          detail: 'Usuario creado con exito'\n        });\n      } else {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: mensaje\n        });\n      }\n    }\n    filterRem(event) {\n      //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n      let filtered = [];\n      let query = event.query;\n      for (let remi of this.listaremi) {\n        let country = remi;\n        if (country.nombres.toLowerCase().startsWith(query.toLowerCase())) {\n          filtered.push(country);\n        }\n      }\n      this.listaremi = filtered;\n    }\n    filterdesm(event) {\n      //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n      let filtered = [];\n      let query = event.query;\n      for (let dest of this.listadest) {\n        let country = dest;\n        if (country.nombres.toLowerCase().startsWith(query.toLowerCase())) {\n          filtered.push(country);\n        }\n      }\n      this.listadest = filtered;\n    }\n    static {\n      this.ɵfac = function CorrespondenciaComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CorrespondenciaComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.CorrespondenciaService), i0.ɵɵdirectiveInject(i5.RemdemService), i0.ɵɵdirectiveInject(i6.HttpClient), i0.ɵɵdirectiveInject(i7.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CorrespondenciaComponent,\n        selectors: [[\"app-correspondencia\"]],\n        inputs: {\n          corresditar: \"corresditar\",\n          text: \"text\",\n          param: \"param\",\n          target: \"target\",\n          accept: \"accept\"\n        },\n        outputs: {\n          displaychange: \"displaychange\"\n        },\n        decls: 48,\n        vars: 12,\n        consts: [[3, \"hidden\"], [\"pTemplate\", \"header\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"label\", \"atras\", \"class\", \"p-button-outlined p-button-secondary\", 3, \"click\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"Top\", \"Center\"], [1, \"flex-form\"], [1, \"linea\"], [\"for\", \"idRemitente\"], [\"field\", \"nombres\", \"formControlName\", \"idRemitente\", 3, \"ngModelChange\", \"completeMethod\", \"ngModel\", \"suggestions\", \"dropdown\"], [\"pTemplate\", \"item\"], [1, \"validation-errors\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"nombre\"], [\"field\", \"nombres\", \"formControlName\", \"idDestinatario\", 3, \"completeMethod\", \"suggestions\", \"dropdown\"], [\"for\", \"rutaArchivo\"], [\"id\", \"rutaArchivo\", \"type\", \"file\", \"pInputText\", \"\", \"formControlName\", \"rutaArchivo\", 3, \"onchange\"], [\"for\", \"observacion\"], [\"id\", \"observacion\", \"cols\", \"40\", \"pInputText\", \"\", \"formControlName\", \"observacion\"], [\"for\", \"idTipoRemDes\"], [\"formControlName\", \"tipoCorrespondencia\", \"optionLabel\", \"name\", \"optionValue\", \"code\", 3, \"options\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"label\", \"Guardar\", 1, \"p-button-outlined\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"label\", \"atras\", 1, \"p-button-outlined\", \"p-button-secondary\", 3, \"click\"], [1, \"country-item\"], [4, \"ngIf\"]],\n        template: function CorrespondenciaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"app-header-menu\", 0);\n            i0.ɵɵelementStart(1, \"p-panel\");\n            i0.ɵɵtemplate(2, CorrespondenciaComponent_ng_template_2_Template, 2, 1, \"ng-template\", 1)(3, CorrespondenciaComponent_button_3_Template, 1, 0, \"button\", 2);\n            i0.ɵɵelementStart(4, \"form\", 3);\n            i0.ɵɵelement(5, \"p-toast\", 4);\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n            i0.ɵɵtext(9, \"Remitente\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(10, \"\\u00A0 \");\n            i0.ɵɵelementStart(11, \"p-autoComplete\", 8);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function CorrespondenciaComponent_Template_p_autoComplete_ngModelChange_11_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.selectedCountryAdvanced, $event) || (ctx.selectedCountryAdvanced = $event);\n              return $event;\n            });\n            i0.ɵɵlistener(\"completeMethod\", function CorrespondenciaComponent_Template_p_autoComplete_completeMethod_11_listener($event) {\n              return ctx.filterRem($event);\n            });\n            i0.ɵɵtemplate(12, CorrespondenciaComponent_ng_template_12_Template, 3, 2, \"ng-template\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\", 10);\n            i0.ɵɵtemplate(14, CorrespondenciaComponent_ng_container_14_Template, 2, 1, \"ng-container\", 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 12);\n            i0.ɵɵtext(17, \"Destinatario\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(18, \"\\u00A0 \");\n            i0.ɵɵelementStart(19, \"p-autoComplete\", 13);\n            i0.ɵɵlistener(\"completeMethod\", function CorrespondenciaComponent_Template_p_autoComplete_completeMethod_19_listener($event) {\n              return ctx.filterdesm($event);\n            });\n            i0.ɵɵtemplate(20, CorrespondenciaComponent_ng_template_20_Template, 3, 2, \"ng-template\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"div\", 10);\n            i0.ɵɵtemplate(22, CorrespondenciaComponent_ng_container_22_Template, 2, 1, \"ng-container\", 11);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(23, \"div\", 5)(24, \"div\", 6)(25, \"label\", 14);\n            i0.ɵɵtext(26, \"Archivo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(27, \"\\u00A0 \");\n            i0.ɵɵelementStart(28, \"input\", 15);\n            i0.ɵɵlistener(\"onchange\", function CorrespondenciaComponent_Template_input_onchange_28_listener() {\n              return ctx.uploadFile();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(29, \"div\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"div\", 6)(31, \"label\", 16);\n            i0.ɵɵtext(32, \"Observacion\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(33, \"\\u00A0\");\n            i0.ɵɵelement(34, \"br\");\n            i0.ɵɵelementStart(35, \"textarea\", 17);\n            i0.ɵɵtext(36, \"          \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"div\", 10);\n            i0.ɵɵtemplate(38, CorrespondenciaComponent_ng_container_38_Template, 2, 1, \"ng-container\", 11);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(39, \"div\", 5)(40, \"div\", 6)(41, \"label\", 18);\n            i0.ɵɵtext(42, \"Tipo Rem / Des\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(43, \"\\u00A0 \");\n            i0.ɵɵelement(44, \"p-dropdown\", 19);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(45, \"div\", 5)(46, \"div\", 6)(47, \"button\", 20);\n            i0.ɵɵlistener(\"click\", function CorrespondenciaComponent_Template_button_click_47_listener() {\n              return ctx.Save();\n            });\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"hidden\", ctx.verEditar);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.displaybotton);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.myform);\n            i0.ɵɵadvance(7);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedCountryAdvanced);\n            i0.ɵɵproperty(\"suggestions\", ctx.listaremi)(\"dropdown\", true);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.validation.idRemitente);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"suggestions\", ctx.listadest)(\"dropdown\", true);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.validation.idDestinatario);\n            i0.ɵɵadvance(16);\n            i0.ɵɵproperty(\"ngForOf\", ctx.validation.observacion);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"options\", ctx.listtipocorr);\n          }\n        },\n        dependencies: [i8.NgForOf, i8.NgIf, i3.PrimeTemplate, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i9.ButtonDirective, i10.InputText, i11.Toast, i12.Panel, i13.Dropdown, i14.AutoComplete, i15.HeaderMenuComponent]\n      });\n    }\n  }\n  return CorrespondenciaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}